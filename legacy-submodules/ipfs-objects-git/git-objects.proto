// IPFS Git-like Objects

// The formats below are only the "body" (data) part
// of an IPFS Object structure.

// Note: since links are stored in the IPFS Object
// structure itself, references below are indices into
// the IPFS Object Links list.

enum GitObject {
  BLOCK = 0;
  LIST = 1;
  TREE = 2;
  COMMIT = 3;
}

// no need to serialize block
//message Block {
//  optional bytes data = 1; // opaque data
//}

message List {
  repeated uint32 items = 1; // link indices.
}

message Tree {
  // Rest of the reference already in the Object's Links
  message TreeEntry {
    optional uint32 index = 1;   // index into links
    optional GitObject type = 2; // so we can ls nicely
  }

  repeated TreeEntry entries = 1;
}

message Commit {
  optional GitObject type = 3;   // unlike Git, object can be any object.
  optional string date = 5;      // iso datetime in UTC
  optional string message = 6;   // message text

  // don't need to include the actual hashes, because they're links 0, 1, and 2.
  // optional bytes parent = 1;     // parent Commit hash (link 0)
  // optional bytes object = 2;     // target Object hash (link 1)
  // optional bytes author = 4;     // author hash (link 2)
}
